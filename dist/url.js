/*! js-handy-url - v1.0.0 - 2016-03-24 
 *  Provides basic url handling and allows to simply work with urls without juggling all the time with regular expressions. If the class is initialised without an url parameter, it will take the current URL.
 */
"use strict";define(function(){var a=function(b){var c="pathname",d="parameters",e="baseURL",f="urlBody",g="hash",h=this;b||(b=window.location.href),b=b.replace(/\+/gi," "),h[d]={},h[e]=b;var i=b.split("#");if(h[g]=i.length>1?i[1]:null,i=i[0].split("?"),h[f]=i[0],i.length>1)for(var j=i[1].split("&"),k=j.length,l=0;k--;l++){var m=new String(j[l]).split("=");h[d][m[0]]=decodeURIComponent(m[1])}i=h[f].split("/"),h.isRelative="http"!=i[0].substr(0,4),h.protocol=h.isRelative?window.location.protocol:i.shift(),h.isRelative||i.shift(),h.host=h.isRelative?window.location.host:i.shift(),h[c]=i.join("/"),"/"==!h[c].substr(0,1)&&(h[c]="/"+h[c]),h.setHash=function(a){return h[g]=a,h},h.getHash=function(){return h[g]},h.hasParameters=function(){for(var a in h[d])if(a)return!0;return!1},h.hasParameter=function(a){return!!h[d][a]},h.getParameter=function(a,b){return h[d][a]?h[d][a]:b},h.addParameter=function(a,b){return a&&b&&(h[d][a]=b),h},h.addParameters=function(a){for(var b in a)h.addParameter(b,a[b]);return h},h.removeParameter=function(a){return delete h[d][a],h},h.makeRelative=function(){return"http"==h[f].substr(0,4)&&(h[f]=h[f].replace(/^(?:\/\/|[^\/]+)*\//,"/")),h[f]=h[f].replace("index.html",""),h},h.appendToPath=function(a){return"/"!=h[f].slice(-1)&&(a="/"+a),h[f]+=a,h[c]+=a,h},h.isInternalURL=function(){return window.location.host==h.host},h.clone=function(){return new a(h.toString())},h.toString=function(a){var b=h[f];if(h.hasParameters()){var c,e=!0;for(c in h[d])b+=e?"?":"&",b+=c+"="+encodeURIComponent(h[d][c]),e=!1}return!a&&h[g]&&(b+="#"+h[g]),b}};return a});